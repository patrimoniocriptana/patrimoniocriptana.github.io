# Carga de los datos
library(RCurl)
library(yaml)
library(dplyr)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(rgdal)
baseurl <- "http://forosocialcriptana.github.io/catalogo-patrimonio/"
url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data[["Tipo.de.valor"]] <- factor(data[["Tipo.de.valor"]])
# Obtención de rutas
ruta1 <- readOGR(dsn = "datos", layer = "ruta1")
# Función que obiene el nombre normalizado para una ficha de un lugar.
getName <- function (x) {
name <- gsub(" ", "-", tolower(iconv(x, to='ASCII//TRANSLIT')))
name <- gsub("/", "-", name)
return(name)
}
# Transformación de las url de las fotos para tomarlas del catálogo en github
getUrlPhoto <- function (x) {
name <- ""
if (x[9]!="") {
name <- paste("https://forosocialcriptana.github.io/catalogo/img/small/", getName(x[2]), "-1.jpg", sep="")
}
return(name)
}
data[["Fotos"]] <- apply(data, 1, getUrlPhoto)
# Creación de una columna con los textos de los popups
data[["Popup"]] <- paste("<h3><a href=\"", baseurl, "lugares/", getName(data[["Título"]]), "/index.html\">", data[["Título"]], "</a></h3>\n\n<img src=\"", data[["Fotos"]], "\">\n\n<p>", data[["Descripción.breve"]], "</p>", sep="")
# Paleta de colores
#tmp <- factor(sample.int(4, nrow(data), TRUE))
pal <- colorFactor(c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"), data[["Tipo.de.valor"]])
#colors <- colorFactor(terrain.colors(4), levels(data[["Tipo.de.valor"]]))
mapa <- leaflet(data=data) %>%
setView(lng = -3.0837, lat = 39.3343, zoom = 11) %>%
# Añadir capa de mapa base
addTiles("https://api.mapbox.com/styles/v1/mapbox/outdoors-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Topográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir capa de mapa ortofotográfico
addTiles("https://api.mapbox.com/styles/v1/forosocialcriptana/ciq96tnhl007zerm4k9idudqz/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Fotográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir marcadores de lugares
addCircleMarkers(lng=~Longitud, lat=~Latitud, popup=~Popup, color=~pal(Tipo.de.valor), opacity = 1, fillOpacity = 0.5, weight = 2, radius = 4, clusterOptions = markerClusterOptions(), group="Lugares") %>%
# Añadir rutas
addPolylines(data = ruta1, color = "purple", weight = 4, popup = "Ruta del Arroyo San Marcos", group="Rutas") %>%
hideGroup("Rutas") %>%
# Control de capas
addLayersControl(
baseGroups = c("Topográfico", "Fotográfico"),
overlayGroups = c("Lugares", "Rutas"),
options = layersControlOptions(collapsed = TRUE)
) %>%
# Añadir leyenda
addLegend(position = 'bottomright', pal=pal, values=~Tipo.de.valor, title="Tipo", opacity = 0.6)
# Imprimir el mapa
mapa
saveWidget(mapa, "index.html", selfcontained = TRUE)
# Carga de los datos
library(RCurl)
library(yaml)
library(dplyr)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(rgdal)
baseurl <- "http://forosocialcriptana.github.io/catalogo-patrimonio/"
url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data[["Tipo.de.valor"]] <- factor(data[["Tipo.de.valor"]])
# Obtención de rutas
ruta1 <- readOGR(dsn = "../datos", layer = "ruta1")
# Función que obiene el nombre normalizado para una ficha de un lugar.
getName <- function (x) {
name <- gsub(" ", "-", tolower(iconv(x, to='ASCII//TRANSLIT')))
name <- gsub("/", "-", name)
return(name)
}
# Transformación de las url de las fotos para tomarlas del catálogo en github
getUrlPhoto <- function (x) {
name <- ""
if (x[9]!="") {
name <- paste("https://forosocialcriptana.github.io/catalogo/img/small/", getName(x[2]), "-1.jpg", sep="")
}
return(name)
}
data[["Fotos"]] <- apply(data, 1, getUrlPhoto)
# Creación de una columna con los textos de los popups
data[["Popup"]] <- paste("<h3><a href=\"", baseurl, "lugares/", getName(data[["Título"]]), "/index.html\">", data[["Título"]], "</a></h3>\n\n<img src=\"", data[["Fotos"]], "\">\n\n<p>", data[["Descripción.breve"]], "</p>", sep="")
# Paleta de colores
#tmp <- factor(sample.int(4, nrow(data), TRUE))
pal <- colorFactor(c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"), data[["Tipo.de.valor"]])
#colors <- colorFactor(terrain.colors(4), levels(data[["Tipo.de.valor"]]))
mapa <- leaflet(data=data) %>%
setView(lng = -3.0837, lat = 39.3343, zoom = 11) %>%
# Añadir capa de mapa base
addTiles("https://api.mapbox.com/styles/v1/mapbox/outdoors-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Topográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir capa de mapa ortofotográfico
addTiles("https://api.mapbox.com/styles/v1/forosocialcriptana/ciq96tnhl007zerm4k9idudqz/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Fotográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir marcadores de lugares
addCircleMarkers(lng=~Longitud, lat=~Latitud, popup=~Popup, color=~pal(Tipo.de.valor), opacity = 1, fillOpacity = 0.5, weight = 2, radius = 4, clusterOptions = markerClusterOptions(), group="Lugares") %>%
# Añadir rutas
addPolylines(data = ruta1, color = "purple", weight = 4, popup = "Ruta del Arroyo San Marcos", group="Rutas") %>%
hideGroup("Rutas") %>%
# Control de capas
addLayersControl(
baseGroups = c("Topográfico", "Fotográfico"),
overlayGroups = c("Lugares", "Rutas"),
options = layersControlOptions(collapsed = TRUE)
) %>%
# Añadir leyenda
addLegend(position = 'bottomright', pal=pal, values=~Tipo.de.valor, title="Tipo", opacity = 0.6)
# Imprimir el mapa
mapa
saveWidget(mapa, "index.html", selfcontained = TRUE)
library(RCurl)
library(yaml)
library(dplyr)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(rgdal)
baseurl <- "http://forosocialcriptana.github.io/catalogo-patrimonio/"
url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data[["Tipo.de.valor"]] <- factor(data[["Tipo.de.valor"]])
# Obtención de rutas
ruta1 <- readOGR(dsn = "../datos", layer = "ruta1")
# Función que obiene el nombre normalizado para una ficha de un lugar.
getName <- function (x) {
name <- gsub(" ", "-", tolower(iconv(x, to='ASCII//TRANSLIT')))
name <- gsub("/", "-", name)
return(name)
}
# Transformación de las url de las fotos para tomarlas del catálogo en github
getUrlPhoto <- function (x) {
name <- ""
if (x[9]!="") {
name <- paste("https://forosocialcriptana.github.io/catalogo/img/small/", getName(x[2]), "-1.jpg", sep="")
}
return(name)
}
data[["Fotos"]] <- apply(data, 1, getUrlPhoto)
# Creación de una columna con los textos de los popups
data[["Popup"]] <- paste("<h3><a href=\"", baseurl, "lugares/", getName(data[["Título"]]), "/index.html\">", data[["Título"]], "</a></h3>\n\n<img src=\"", data[["Fotos"]], "\">\n\n<p>", data[["Descripción.breve"]], "</p>", sep="")
# Paleta de colores
#tmp <- factor(sample.int(4, nrow(data), TRUE))
pal <- colorFactor(c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"), data[["Tipo.de.valor"]])
#colors <- colorFactor(terrain.colors(4), levels(data[["Tipo.de.valor"]]))
mapa <- leaflet(data=data) %>%
setView(lng = -3.0837, lat = 39.3343, zoom = 11) %>%
# Añadir capa de mapa base
addTiles("https://api.mapbox.com/styles/v1/mapbox/outdoors-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Topográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir capa de mapa ortofotográfico
addTiles("https://api.mapbox.com/styles/v1/forosocialcriptana/ciq96tnhl007zerm4k9idudqz/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Fotográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir marcadores de lugares
addCircleMarkers(lng=~Longitud, lat=~Latitud, popup=~Popup, color=~pal(Tipo.de.valor), opacity = 1, fillOpacity = 0.5, weight = 2, radius = 4, clusterOptions = markerClusterOptions(), group="Lugares") %>%
# Añadir rutas
addPolylines(data = ruta1, color = "purple", weight = 4, popup = "Ruta del Arroyo San Marcos", group="Rutas") %>%
hideGroup("Rutas") %>%
# Control de capas
addLayersControl(
baseGroups = c("Topográfico", "Fotográfico"),
overlayGroups = c("Lugares", "Rutas"),
options = layersControlOptions(collapsed = TRUE)
) %>%
# Añadir leyenda
addLegend(position = 'bottomright', pal=pal, values=~Tipo.de.valor, title="Tipo", opacity = 0.6)
# Imprimir el mapa
mapa
saveWidget(mapa, "index.html", selfcontained = FALSE)
# Carga de los datos
library(RCurl)
library(yaml)
library(dplyr)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(rgdal)
baseurl <- "http://forosocialcriptana.github.io/catalogo-patrimonio/"
url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data[["Tipo.de.valor"]] <- factor(data[["Tipo.de.valor"]])
# Obtención de rutas
ruta1 <- readOGR(dsn = "../datos", layer = "ruta1")
# Función que obiene el nombre normalizado para una ficha de un lugar.
getName <- function (x) {
name <- gsub(" ", "-", tolower(iconv(x, to='ASCII//TRANSLIT')))
name <- gsub("/", "-", name)
return(name)
}
# Transformación de las url de las fotos para tomarlas del catálogo en github
getUrlPhoto <- function (x) {
name <- ""
if (x[9]!="") {
name <- paste(baseurl, "img/small/", getName(x[2]), "-1.jpg", sep="")
}
return(name)
}
data[["Fotos"]] <- apply(data, 1, getUrlPhoto)
# Creación de una columna con los textos de los popups
data[["Popup"]] <- paste("<h3><a href=\"", baseurl, "lugares/", getName(data[["Título"]]), "/index.html\">", data[["Título"]], "</a></h3>\n\n<img src=\"", data[["Fotos"]], "\">\n\n<p>", data[["Descripción.breve"]], "</p>", sep="")
# Paleta de colores
#tmp <- factor(sample.int(4, nrow(data), TRUE))
pal <- colorFactor(c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"), data[["Tipo.de.valor"]])
#colors <- colorFactor(terrain.colors(4), levels(data[["Tipo.de.valor"]]))
mapa <- leaflet(data=data) %>%
setView(lng = -3.0837, lat = 39.3343, zoom = 11) %>%
# Añadir capa de mapa base
addTiles("https://api.mapbox.com/styles/v1/mapbox/outdoors-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Topográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir capa de mapa ortofotográfico
addTiles("https://api.mapbox.com/styles/v1/forosocialcriptana/ciq96tnhl007zerm4k9idudqz/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Fotográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir marcadores de lugares
addCircleMarkers(lng=~Longitud, lat=~Latitud, popup=~Popup, color=~pal(Tipo.de.valor), opacity = 1, fillOpacity = 0.5, weight = 2, radius = 4, clusterOptions = markerClusterOptions(), group="Lugares") %>%
# Añadir rutas
addPolylines(data = ruta1, color = "purple", weight = 4, popup = "Ruta del Arroyo San Marcos", group="Rutas") %>%
hideGroup("Rutas") %>%
# Control de capas
addLayersControl(
baseGroups = c("Topográfico", "Fotográfico"),
overlayGroups = c("Lugares", "Rutas"),
options = layersControlOptions(collapsed = TRUE)
) %>%
# Añadir leyenda
addLegend(position = 'bottomright', pal=pal, values=~Tipo.de.valor, title="Tipo", opacity = 0.6)
# Imprimir el mapa
mapa
saveWidget(mapa, "index.html", selfcontained = FALSE)
saveWidget(mapa, "index.html", selfcontained = FALSE)
table <- table(data$Tipo.de.valor)
labels <- paste(names(table), "\n", table, sep="")
pie(table, labels = labels, main="Lugares catalogados por categorías")
pie(table, labels = labels, main="Lugares catalogados por categorías", col=rainbow(length(labels)))
pie(table, labels = labels, main="Lugares catalogados por categorías", col=terrain.colors(length(labels)))
pie(table, labels = labels, main="Lugares catalogados por categorías", col=c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"))
png("lugares/estadisticas.png")
pie(table, labels = labels, main="Lugares catalogados por categorías", col=c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"))
setwd("/media/alf/datos/web/catalogo-patrimonio")
png("lugares/estadisticas.png")
pie(table, labels = labels, main="Lugares catalogados por categorías", col=c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"))
dev.off()
source('/media/alf/datos/web/catalogo-patrimonio/generar_catalogo.R', echo=TRUE)
library(knitr)
## Global options
options(digits = 4, scipen=10)
opts_chunk$set(echo=FALSE, cache=TRUE, prompt=FALSE, tidy=TRUE, comment=NA, message=FALSE, warning=FALSE)
```
```{r}
# Carga de los datos
library(RCurl)
library(yaml)
library(dplyr)
library(leaflet)
library(htmltools)
library(htmlwidgets)
library(rgdal)
baseurl <- "http://forosocialcriptana.github.io/catalogo-patrimonio/"
url.data <- "https://docs.google.com/spreadsheets/d/1hWyDiPwVU1oUflqVSC6iSveP-NigMpZhh9e7RKXZpJk/pub?output=csv"
data <- read.csv(text = getURL(url.data, .encoding = "UTF-8"), encoding = "UTF-8", header = T, stringsAsFactors = F)
data[["Tipo.de.valor"]] <- factor(data[["Tipo.de.valor"]])
# Obtención de rutas
ruta1 <- readOGR(dsn = "../datos", layer = "ruta1")
# Función que obiene el nombre normalizado para una ficha de un lugar.
setwd("/media/alf/datos/web/catalogo-patrimonio/mapa")
d
ruta1 <- readOGR(dsn = "../datos", layer = "ruta1")
# Función que obiene el nombre normalizado para una ficha de un lugar.
getName <- function (x) {
name <- gsub(" ", "-", tolower(iconv(x, to='ASCII//TRANSLIT')))
name <- gsub("/", "-", name)
return(name)
}
getUrlPhoto <- function (x) {
name <- ""
if (x[9]!="") {
name <- paste(baseurl, "img/small/", getName(x[2]), "-1.jpg", sep="")
}
return(name)
}
data[["Fotos"]] <- apply(data, 1, getUrlPhoto)
# Creación de una columna con los textos de los popups
data[["Popup"]] <- paste("<h3><a href=\"", baseurl, "lugares/", getName(data[["Título"]]), "/index.html\">", data[["Título"]], "</a></h3>\n\n<img src=\"", data[["Fotos"]], "\">\n\n<p>", data[["Descripción.breve"]], "</p>", sep="")
# Paleta de colores
#tmp <- factor(sample.int(4, nrow(data), TRUE))
pal <- colorFactor(c("#00FF00FF", "#FFFF00FF", "#FF0000FF", "#0000FFFF"), data[["Tipo.de.valor"]])
#colors <- colorFactor(terrain.colors(4), levels(data[["Tipo.de.valor"]]))
mapa <- leaflet(data=data) %>%
setView(lng = -3.0837, lat = 39.3343, zoom = 11) %>%
# Añadir capa de mapa base
addTiles("https://api.mapbox.com/styles/v1/mapbox/outdoors-v9/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Topográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir capa de mapa ortofotográfico
addTiles("https://api.mapbox.com/styles/v1/forosocialcriptana/ciq96tnhl007zerm4k9idudqz/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZm9yb3NvY2lhbGNyaXB0YW5hIiwiYSI6ImJxdVlNV00ifQ.LRq3xNtoNg_WF1QBodWziA", group="Fotográfico", attribution = "<a href=\"http://forosocialcriptana.com\">Foro Social de Campo de Criptana</a>") %>%
# Añadir marcadores de lugares
addCircleMarkers(lng=~Longitud, lat=~Latitud, popup=~Popup, color=~pal(Tipo.de.valor), opacity = 1, fillOpacity = 0.5, weight = 2, radius = 4, clusterOptions = markerClusterOptions(), group="Lugares") %>%
# Añadir rutas
addPolylines(data = ruta1, color = "purple", weight = 4, popup = "Ruta del Arroyo San Marcos", group="Rutas") %>%
hideGroup("Rutas") %>%
# Control de capas
addLayersControl(
baseGroups = c("Topográfico", "Fotográfico"),
overlayGroups = c("Lugares", "Rutas"),
options = layersControlOptions(collapsed = TRUE)
) %>%
# Añadir leyenda
addLegend(position = 'bottomright', pal=pal, values=~Tipo.de.valor, title="Tipo", opacity = 0.6)
# Imprimir el mapa
mapa
saveWidget(mapa, "index.html", selfcontained = FALSE)
